name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: 20
  GCP_PROJECT_ID: magic-box-b8bdc

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # build WASM modules
      - name: Insatll wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0

      - name: Build WASM
        run: |
          find wasmModules -type d -maxdepth 1 -mindepth 1 -exec wasm-pack build --target web {} +

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: Setup yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run ESLint
        run: yarn lint

      # Upload built wasm modules
      - uses: actions/upload-artifact@v3
        if: github.event_name != 'pull_request'
        with:
          name: wasm-modules
          path: wasmModules/*/pkg

  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs:
      - lint
    steps:
      - uses: actions/checkout@v4

      # Download built wasm modules
      - uses: actions/download-artifact@v3
        if: github.event_name != 'pull_request'
        with:
          name: wasm-modules
          path: wasmModules/*/pkg

      - name: List wasm modules
        run: find wasmModules/*/pkg

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: Setup yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build
        run: yarn build
        env:
          # NOTE: allow warnings
          # Treating warnings as errors because process.env.CI = true.
          CI: false

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_MAGIC_BOX_B8BDC }}'
          channelId: live
          projectId: ${{ env.GCP_PROJECT_ID }}
